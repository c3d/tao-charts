// ****************************************************************************
//  charts2.xl                                                      Tao project
// ****************************************************************************
//
//   File Description:
//
//    Implement charts mechanism
//
//
//
//
//
//
//
//
// ****************************************************************************
// This software is property of Taodyne SAS - Confidential
// Ce logiciel est la propriété de Taodyne SAS - Confidentiel
//  (C) 2011 Christophe de Dinechin <christophe@taodyne.com>
//  (C) 2011 Jérôme Forissier <jerome@taodyne.com>
//  (C) 2011 Catherine Burvelle <cathy@taodyne.com>
//  (C) 2011 Taodyne SAS
// ****************************************************************************

import Slides

import "default-theme.xl"

// ============================================================================
//
//                              Load from file
//
// ============================================================================

data chart_datasets

// ----------------------------------------------------------------------------
//   REALS ONLY
// ----------------------------------------------------------------------------
chart_add_data A:real ->
    chart_push_data 1, A

chart_add_data A:real, B:real ->
    chart_push_data 1, A
    chart_push_data 2, B

chart_add_data A:real, B:real, C:real ->
    chart_push_data 1, A
    chart_push_data 2, B
    chart_push_data 3, C

chart_add_data A:real, B:real, C:real, D:real ->
    chart_push_data 1, A
    chart_push_data 2, B
    chart_push_data 3, C
    chart_push_data 4, D


// ----------------------------------------------------------------------------
//   TEXTS ONLY : NEED FIX #3249 TO WORK CORRECTLY
// ----------------------------------------------------------------------------

chart_add_data Other -> false


chart_load_csv Name:text, T:text ->
// ----------------------------------------------------------------------------
//   Load data from a csv file
// ----------------------------------------------------------------------------
    chart_current Name
    load_csv T, "chart_add_data"


chart_load_tsv Name:text, T:text ->
// ----------------------------------------------------------------------------
//   Load data from a tsv file
// ----------------------------------------------------------------------------
    chart_current Name
    load_tsv T, "chart_add_data"


// ============================================================================
//
//                            Init Pie Chart
//
// ============================================================================

chart_init "pie", Style:text, X:integer ->
// ----------------------------------------------------------------------------
//   Initialize pie chart
// ----------------------------------------------------------------------------
    // Compute sum for pie chart
    chart_set_max_axis (chart_sum(chart_first, true)), false


chart_series X:real, Y:real, W:real, H:real, "pie", Style:text, Format:text ->
// ----------------------------------------------------------------------------
//   Draw series of a pie chart
// ----------------------------------------------------------------------------
    contents 0,
        translate X, Y, 0.0
        S := chart_dataset 0
        C := chart_count S
        if(C > 0) then
            for I in 0..(C - 1) loop
                theme_chart theme, "pie", Style, Format, W, H, 0, S, I


// ============================================================================
//
//                            Init Default Chart
//
// ============================================================================

chart_init X:integer -> chart_init chart_type, chart_style, X
chart_init X:integer..Y:integer  -> chart_init with X..Y
chart_init X:integer, Other  ->
    chart_init X
    chart_init Other


chart_init Type:text, Style:text, X:integer ->
// ----------------------------------------------------------------------------
//   Initialize default charts datasets
// ----------------------------------------------------------------------------
    Max := chart_max X
    Min := chart_min X
    chart_max_axis Style, Max
    chart_min_axis Style, Min


// Compute max axis for stacked charts
chart_max_axis "vertical_stacked", M:real   -> chart_max_axis "stacked", M
chart_max_axis "horizontal_stacked", M:real   -> chart_max_axis "stacked", M
chart_max_axis "stacked", M:real   ->
// ----------------------------------------------------------------------------
//   Compute max for stacked charts
// ----------------------------------------------------------------------------
    chart_set_max_axis (chart_max_axis + M) // We sum maximum values


chart_max_axis Style:text, M:real ->
// ----------------------------------------------------------------------------
//   Compute max for regular charts
// ----------------------------------------------------------------------------
    if(chart_max_axis < M) then
        chart_set_max_axis M


// Compute max axis for stacked charts
chart_min_axis "vertical_stacked", M:real   -> chart_min_axis "stacked", M
chart_min_axis "horizontal_stacked", M:real   -> chart_min_axis "stacked", M
chart_min_axis "stacked", M:real   ->
// ----------------------------------------------------------------------------
//   Compute max for stacked charts
// ----------------------------------------------------------------------------
    chart_set_min_axis (chart_min_axis + M) // We sum maximum values


chart_min_axis Style:text, M:real ->
// ----------------------------------------------------------------------------
//   Compute min for regular charts
// ----------------------------------------------------------------------------
    if(chart_min_axis > M) then
        chart_set_min_axis M

// ============================================================================
//
//                            Draw Chart
//
// ============================================================================
chart_id -> 0
chart_id := 0

ALL_CHARTS -> ""
ALL_CHARTS := "re:"


// Shortcuts to push datasets
chart_push_dataset X:integer..Y:integer -> chart_push_dataset with X..Y
chart_push_dataset X:integer, Other ->
    chart_push_dataset X
    chart_push_dataset Other

chart -> chart 1..4
chart X:real, Y:real, W:real, H:real -> chart X, Y, W, H, 1..4


chart X:real, Y:real, W:real, H:real, Body ->
// ----------------------------------------------------------------------------
//   Create and draw a chart with a given size
// ----------------------------------------------------------------------------
    locally
        translate X, Y, 0.0
        scale W, H, 1.0
        chart Body

chart Body ->
// ----------------------------------------------------------------------------
//   Create and draw a chart
// ----------------------------------------------------------------------------
    locally
        chart_id := chart_id + 1

        // Reset and add datasets to draw
        // (Needed for init)
        chart_reset_datasets
        chart_push_dataset Body

        // Create chart and init it
        // if needed
        chart_create chart_name,
            chart_set_max_axis 0.0
            chart_set_min_axis 0.0
            chart_init Body

        chart_draw_title
        chart_draw_xlabel
        chart_draw_ylabel
        chart_draw_legend

        theme_chart_layout theme, chart_type, chart_style, chart_format


chart_series X:real, Y:real, W:real, H:real, Type:text, Style:text, Format:text ->
// ----------------------------------------------------------------------------
//   Draw series of a regular chart
// ----------------------------------------------------------------------------
    contents 0,
        translate X, Y, 0.0
        for N in 0..(chart_datasets_count - 1) loop
            S := chart_dataset N
            C := chart_count S
            if(C > 0) then
                for I in 0..(C - 1) loop
                    theme_chart theme, Type, Style, Format, W, H, N, S, I


// ============================================================================
//
//                          Chart title
//
// ============================================================================

chart_draw_title ->
// ----------------------------------------------------------------------------
//   Draw a title of a regular chart
// ----------------------------------------------------------------------------
    if(chart_title <> "") then
        slide_flow[(chart_id & "chart_title")] := true
        theme_chart_title theme, chart_type, chart_style,
            text chart_title



// ============================================================================
//
//                          Chart legend
//
// ============================================================================

chart_draw_legend ->
// ----------------------------------------------------------------------------
//   Draw legend of a regular chart
// ----------------------------------------------------------------------------
    slide_flow[(chart_id & "chart_legend")] := true
    theme_chart_legend theme, chart_type, chart_style,
        chart_draw_entries chart_type


chart_draw_entries "pie"->
// ----------------------------------------------------------------------------
//   Draw entries of a pie chart legend
// ----------------------------------------------------------------------------
    for N in 1..(chart_count chart_first) loop
        theme_chart_entry theme, "pie", chart_style, N,
            T := (chart_legend N)
            if(T <> "") then
                text T
            else
                text text N


chart_draw_entries Master:text ->
// ----------------------------------------------------------------------------
//   Draw entries of a chart legend
// ----------------------------------------------------------------------------
    for N in 0..(chart_datasets_count - 1) loop
        S := chart_dataset N
        if(chart_count S > 0) then
            theme_chart_entry theme, Master, chart_style, N,
                T := (chart_legend S)
                if(T <> "") then
                    text T
                else
                    text text S


// ============================================================================
//
//                          Chart axis labels
//
// ============================================================================

chart_draw_xlabel ->
// ----------------------------------------------------------------------------
//   Draw a x label of a regular chart
// ----------------------------------------------------------------------------
    if(chart_xlabel <> "") then
        slide_flow[(chart_id & "chart_xlabel")] := true
        theme_chart_xlabel theme, chart_type, chart_style,
            text chart_xlabel


chart_draw_ylabel ->
// ----------------------------------------------------------------------------
//   Draw a y label of a regular chart
// ----------------------------------------------------------------------------
    if(chart_ylabel <> "") then
        slide_flow[(chart_id & "chart_ylabel")] := true
        theme_chart_ylabel theme, chart_type, chart_style,
            text chart_ylabel


// ============================================================================
//
//                          Chart axis
//
// ============================================================================

chart_xaxis X:real, Y:real, W:real, H:real, Style:text, Format:text ->
// ----------------------------------------------------------------------------
//   Draw a x axis of a regular chart
// ----------------------------------------------------------------------------
    theme_chart_xaxis theme, chart_type, Style, Format, X, Y, W, H


chart_yaxis X:real, Y:real, W:real, H:real, Style:text, Format:text ->
// ----------------------------------------------------------------------------
//   Draw a y axis of a regular chart
// ----------------------------------------------------------------------------
    theme_chart_yaxis theme, chart_type, Style, Format, X, Y, W, H


// ============================================================================
//
//                          Chart flow
//
// ============================================================================

chart_flow X:real, Y:real, W:real, H:real, Flow:text ->
// ----------------------------------------------------------------------------
//   Create a unique flow per chart
// ----------------------------------------------------------------------------
    flow_name -> ""
    flow_name := (chart_id & Flow)
    if slide_flow[flow_name] then
        theme_flow theme, chart_type, Flow, X, Y, W, H,
            text_flow flow_name
        slide_flow[flow_name] := false


chart_flows X:real, Y:real, W:real, H:real, Flow1:text, Flow2:text ->
// ----------------------------------------------------------------------------
//   Create uniques flow per chart
// ----------------------------------------------------------------------------
    flow_name1 -> ""
    flow_name2 -> ""
    flow_name1 := (chart_id & Flow1)
    flow_name2 := (chart_id & Flow2)
    if slide_flow[flow_name1] then
        theme_flow theme, chart_type, Flow1, X, Y, W, H,
            text_flow flow_name1
            if slide_flow[flow_name2] then
                paragraph_break
                text_flow flow_name2
    else if slide_flow[flow_name2] then
        theme_flow theme, chart_type, Flow1, X, Y, W, H,
            text_flow flow_name2

    slide_flow[flow_name1] := false
    slide_flow[flow_name2] := false


chart_text_flow Flow:text, Body ->
// ----------------------------------------------------------------------------
//   Show unique flow per chart
// ----------------------------------------------------------------------------
    text_flow (chart_id & Flow), Body


// ============================================================================
//
//                            Shortcut functions
//
// ============================================================================
// Due to XL bug #2975, we have to define some of these
// shortcut functions in this file

// Chart
chart_name -> chart_name ""
chart_first -> chart_first chart_name
chart_last -> chart_last chart_name
chart_type -> chart_type chart_name
chart_set_type T:text -> chart_set_type chart_name, T
chart_style -> chart_style chart_name
chart_set_style T:text -> chart_set_style chart_name, T
chart_format -> chart_format chart_name
chart_set_format T:text -> chart_set_format chart_name, T

// Data
chart_reset -> chart_reset chart_name
chart_push_data N:integer, R:real -> chart_push_data chart_name, N, R
chart_load_csv T:text -> chart_load_csv chart_name, T
chart_load_tsv T:text -> chart_load_tsv chart_name, T
chart_min N:integer -> chart_min chart_name, N
chart_max N:integer -> chart_max chart_name, N
chart_sum N:integer -> chart_sum chart_name, N, true
chart_sum N:integer, B:boolean -> chart_sum chart_name, N, B
chart_max_count -> chart_max_count chart_name
chart_count N:integer -> chart_count chart_name, N
chart_data_ratio N:integer, I:integer -> chart_data_ratio chart_name, N, I
chart_data N:integer, I:integer -> chart_data chart_name, N, I
chart_data_property N:integer, I:integer, P:text -> chart_data_property chart_name, N, I, P
chart_data_set_property N:integer, I:integer, P:text, R:real -> chart_data_set_property chart_name, N, I, P, R

// Datasets : USE ONLY IN THIS FILE
chart_datasets_count -> chart_datasets_count chart_name
chart_reset_datasets -> chart_reset_datasets chart_name
chart_push_dataset S:integer -> chart_push_dataset chart_name, S
chart_dataset I:integer -> chart_dataset chart_name, I

// Title
chart_title -> chart_title chart_name
chart_set_title T:text -> chart_set_title chart_name, T

// Legend
chart_legend N:integer -> chart_legend chart_name, N
chart_set_legend N:integer, T:text -> chart_set_legend chart_name, N, T

// Axis : USE ONLY IN THIS FILE
chart_set_max_axis R:real -> chart_set_max_axis chart_name, R, true
chart_set_max_axis R:real, B:boolean -> chart_set_max_axis chart_name, R, B
chart_max_axis -> chart_max_axis chart_name
chart_set_min_axis R:real -> chart_set_min_axis chart_name, R, true
chart_set_min_axis R:real, B:boolean -> chart_set_min_axis chart_name, R, B
chart_min_axis -> chart_min_axis chart_name

// Axis labels
chart_xlabel -> chart_xlabel chart_name
chart_ylabel -> chart_ylabel chart_name
chart_set_xlabel L:text -> chart_set_xlabel chart_name, L
chart_set_ylabel L:text -> chart_set_ylabel chart_name, L

// Ticks
chart_xticks -> chart_xticks chart_name
chart_set_xticks N:integer -> chart_set_xticks chart_name, N
chart_yticks -> chart_yticks chart_name
chart_set_yticks N:integer -> chart_set_yticks chart_name, N

// Ticks labels
chart_xticks_label N:integer -> chart_xticks_label chart_name, N
chart_yticks_label N:integer -> chart_yticks_label chart_name, N
chart_set_xticks_label N:integer, T:text -> chart_set_xticks_label chart_name, N, T
chart_set_yticks_label N:integer, T:text -> chart_set_yticks_label chart_name, N, T
chart_set_xticks_labels Name:text, L:tree ->
    for i in 1 .. size L loop
        chart_set_xticks_label Name, i - 1, (L at i)
chart_set_yticks_labels Name:text, L:code ->
    for i in 1 .. size L loop
        chart_set_yticks_label Name, i - 1, (L at i)

